{"version":3,"sources":["components/Calendar.jsx","components/Reminders.jsx","components/DetailedView.jsx","App.js","index.js"],"names":["Calendar","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","month","year","monthInt","days","daysRender","_i","length","day","push","react_default","a","createElement","key","date","_this2","firstDayOfMonth","Date","getFullYear","getMonth","getDaysOfTheCalendar","trs","tds","i","onClick","removeMonth","GetMonthNameFromInt","addMonth","RenderDaysOfTheWeekHeader","range","start","edge","step","arguments","arr","endOfMonth","bDays","getDay","last","getDate","endingLastFewDays","endOfWeek","concat","toConsumableArray","thisMonth","setState","className","RenderCalendar","props","React","Component","DetailedView","selectedDates","header","end","time","intv","intervals","tr","hoursDiv","ths","GetEventCols","console","log","Fragment","RenderHeader","RenderBody","RenderDetailedView","App","x","URLSearchParams","selectedDate","reminders","offset","userPreferences","startOfWeek","Calendar_Calendar","Reminders_default","DetailedView_DetailedView","CalendarCustomHTMLElement","innerHTML","ReactDOMServer","renderToString","App_App","HTMLElement","window","customElements","define","render","document","querySelector"],"mappings":"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","file":"static/js/main.73532f0d.chunk.js","sourcesContent":["import React from 'react'; \n\nexport default class Calendar extends React.Component {\n    constructor() {\n        super();\n\n        this.state = {\n            month: 0,\n            year: 0\n        }\n    }\n\n    GetMonthNameFromInt(monthInt) {\n        const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n            \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n        ];\n        \n        return monthNames[monthInt]; \n    }\n\n    RenderDaysOfTheWeekHeader() {\n        var days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n        var daysRender = [];\n        for (var day of days)\n        {\n            daysRender.push((\n                <th key={day}>{day}</th>\n            ));\n        }\n        return daysRender;\n    }\n\n    RenderCalendar(date) {        \n        var firstDayOfMonth = new Date(date.getFullYear()+this.state.year, date.getMonth()+this.state.month);\n        var days = this.getDaysOfTheCalendar(new Date(new Date().getFullYear()+this.state.year, new Date().getMonth()+this.state.month));\n        var trs = [];\n        var tds = [];\n        for(var i = 0; i < days.length; i++) {\n            if(i!==0 && i%7===0)\n            {\n                trs.push((\n                    <tr>{tds}</tr>\n                ));\n                tds = [];\n                tds.push((<td>{days[i]}</td>));\n            }\n            else\n            {\n                tds.push((<td>{days[i]}</td>));\n            }\n        }\n        trs.push((\n            <tr>{tds}</tr>\n        ));\n        tds = [];\n\n        return (\n            <table>\n                <caption>\n                <button onClick={() => this.removeMonth()}>-</button>\n                    {this.GetMonthNameFromInt(firstDayOfMonth.getMonth())} - {firstDayOfMonth.getFullYear()}\n                    <button onClick={() => this.addMonth()}>+</button> \n                </caption>\n                <thead>\n                    <tr>\n                        {this.RenderDaysOfTheWeekHeader()}                        \n                    </tr>\n                </thead>\n                <tbody>\n                    {trs}\n                </tbody>\n            </table>\n        ); \n    }\n\n    getDaysOfTheCalendar(date) {\n        var range = function (start, edge, step) {\n            // If only 1 number passed make it the edge and 0 the start\n            if (arguments.length === 1) {\n              edge = start;\n              start = 0;\n            }\n          \n            // Validate edge/start\n            edge = edge || 0;\n            step = step || 1;\n          \n            // Create array of numbers, stopping before the edge\n            let arr = [];\n            for (arr; (edge - start) * step > 0; start += step) {\n              arr.push(start);\n            }\n            return arr;\n          };\n          //const weekdays = new Array(\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\");\n          const startOfWeek = 0; // SUNDAY\n          const endOfWeek = 6; // SATURDAY\n          const offset = 0;\n          date = date || new Date(new Date().getFullYear(), new Date().getMonth());\n          const endOfMonth = new Date(date.getFullYear(), date.getMonth()+1, 0);\n          var bDays = []\n          if(date.getDay()-startOfWeek!==0)\n          {\n              const last = new Date(date.getFullYear(), date.getMonth(), 0);\n              const beginningLeftOverDays = new Date(last.getFullYear(), last.getMonth(), last.getDate()-(last.getDay()-(startOfWeek+offset)));\n              bDays = range(beginningLeftOverDays.getDate(), last.getDate()+1);\n          }\n          const endingLastFewDays = new Date(endOfMonth.getFullYear(), endOfMonth.getMonth()+1, (endOfWeek+offset)-endOfMonth.getDay());\n          const days = [...bDays, ...range(1, endOfMonth.getDate()+1), ...range(1, endingLastFewDays.getDate()+1)]\n          return days;\n    }\n\n    addMonth () {\n        var thisMonth = new Date().getMonth();\n        let month = this.state.month;\n        let year = 0;\n        if(thisMonth+1 > 12)\n        {\n            month = 0;\n            year = 1;\n        }\n        else\n        {\n            month++;            \n        }\n        this.setState({month: month, year: year});\n    }\n\n    removeMonth() {\n        let month = this.state.month;\n        this.setState({month: --month});\n    }\n\n    render() {\n        return (\n            <div className=\"calendar\">                       \n                {this.RenderCalendar(this.props.date)}\n            </div>\n        );\n    }\n}","import React from 'react';\n\nexport default class extends React.Component {\n    render() {\n        return (\n            <div>\n                <h1>Reminders</h1>\n                <ul>\n                    <li>i am a reminder</li>\n                </ul>\n            </div>\n        );\n    }\n}","import React from 'react';\n\nexport default class DetailedView extends React.Component {\n    RenderHeader(selectedDates) {\n        var header = [];\n        // timestamp column\n        header.push((\n            <th></th> \n        ));\n        for (let start = selectedDates.start().getDate(); start <= selectedDates.end().getDate(); start++)\n        {\n            header.push((\n                <th>{start}</th>\n            ));\n        }\n        return header;\n    }\n    GetEventCols(selectedDates, time, intv) {\n        // we will have to make an api call here\n        var header = [];\n        // timestamp column\n        for (let start = selectedDates.start().getDate(); start <= selectedDates.end().getDate(); start++)\n        {\n            header.push((\n                <td></td>\n            ));\n        }\n        return header;\n    }\n    RenderBody(selectedDates, intervals) {\n        var tr = [];\n        var hoursDiv = 60/intervals;\n        for(let i = 0, time = 12, intv=0; i < 24*hoursDiv; i++) {\n            var ths = [];\n            ths.push((\n                <td key={i}>{time}:{intv < 9 ? \"0\"+intv : intv}</td>                \n            ));            \n            ths.push(this.GetEventCols(selectedDates, time, intv));\n            tr.push((\n                <tr key={i*2}>{ths}</tr>\n            ))\n            intv += intervals;\n            if(intv === 60) {\n                intv = 0;\n                if(time===12) time = 1;\n                else time++;\n            }\n        }\n        return tr;\n    }\n    RenderDetailedView (selectedDates, intv) {\n        console.log(selectedDates.start());\n        console.log(selectedDates.end());\n        return (\n            <React.Fragment>\n                <table>\n                    <thead>\n                        <tr key=\"abc123\">\n                            {this.RenderHeader(selectedDates)}\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.RenderBody(selectedDates, intv)}\n                    </tbody>\n                </table>\n            </React.Fragment>\n        );\n    }\n    render() {\n        return (\n            <React.Fragment>\n                {this.RenderDetailedView(this.props.selectedDates, this.props.intervals)}\n            </React.Fragment>\n        );\n    }\n}","import React from 'react'; \nimport Calendar from './components/Calendar'\nimport Reminders from './components/Reminders';\nimport DetailedView from './components/DetailedView'\nimport './css/style.css';\n\nexport default class App extends React.Component {\n\n    state = {\n        selectedDate: new Date(),        \n        intervals: 30,\n        reminders: {},\n        selectedDates: {\n            start: () => {\n                var date = this.state.selectedDate;\n                if(date.getDate() === 1) return date;\n                var offset = date.getDay()-this.state.userPreferences.startOfWeek;\n                return new Date(date.getFullYear(), date.getMonth(), date.getDate()-offset);\n            },\n            end: () => {\n                var date = this.state.selectedDate;\n                var offset = 6-date.getDay()+this.state.userPreferences.startOfWeek;\n                return new Date(date.getFullYear(), date.getMonth(), date.getDate()+offset);\n            }\n        },\n        userPreferences: {\n            startOfWeek: 0,\n        }\n    };\n\n    constructor () {\n        // load state for user\n        var x = new URLSearchParams();\n        console.log(x);\n        super();\n    };\n    \n    render () {\n        return (\n            <React.Fragment>\n                <aside className=\"sidebar\">\n                    <Calendar className=\"calendar\" date={this.state.selectedDate} selectedDates={this.state.selectedDates} />\n                    <Reminders className=\"reminders\" />\n                </aside>\n                <div className=\"details-view\" >\n                    <DetailedView date={this.state.selectedDate} intervals={this.state.intervals} selectedDates={this.state.selectedDates} />\n                </div>\n            </React.Fragment>\n        );\n    }\n}","import React from 'react';\nimport {render} from 'react-dom';\nimport ReactDOMServer from 'react-dom/server';\nimport App from './App'\n\nclass CalendarCustomHTMLElement extends HTMLElement {\n    constructor() {\n        super();\n        this.innerHTML = ReactDOMServer.renderToString(<App />);\n    }\n}\n\nwindow.customElements.define(\"app-calendar\", CalendarCustomHTMLElement);\nrender(<App />, document.querySelector(\"#calendar\"));"],"sourceRoot":""}