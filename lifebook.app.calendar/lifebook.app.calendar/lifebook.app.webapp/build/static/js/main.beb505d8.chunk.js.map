{"version":3,"sources":["components/Calendar.jsx","components/Reminders.jsx","components/DetailedView.jsx","App.js","index.js"],"names":["Calendar","monthInt","days","daysRender","_i","length","day","push","react_default","a","createElement","key","start","end","selectedDate","calendarDayCount","firstWeekOffset","getDay","weeks","week","selected","i","getDate","td","className","tr","date","firstDayOfMonth","Date","getFullYear","getMonth","lastDayOfMonth","console","log","this","GetMonthNameFromInt","RenderDaysOfTheWeekHeader","RenderWeeksOfTheWeekHeader","RenderCalendar","props","React","Component","DetailedView","selectedDates","header","time","intv","intervals","hoursDiv","ths","GetEventCols","Fragment","RenderHeader","RenderBody","RenderDetailedView","App","_this","Object","classCallCheck","x","URLSearchParams","possibleConstructorReturn","getPrototypeOf","call","state","reminders","offset","userPreferences","startOfWeek","Calendar_Calendar","Reminders_default","DetailedView_DetailedView","CalendarCustomHTMLElement","innerHTML","ReactDOMServer","renderToString","App_App","HTMLElement","window","customElements","define","render","document","querySelector"],"mappings":"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","file":"static/js/main.beb505d8.chunk.js","sourcesContent":["import React from 'react'; \n\nexport default class Calendar extends React.Component {\n    GetMonthNameFromInt(monthInt) {\n        const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n            \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n        ];\n        \n        return monthNames[monthInt]; \n    }\n    RenderDaysOfTheWeekHeader() {\n        var days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n        var daysRender = [];\n        for (var day of days)\n        {\n            daysRender.push((\n                <th key={day}>{day}</th>\n            ));\n        }\n        return daysRender;\n    }\n    RenderWeeksOfTheWeekHeader(start, end, selectedDate) {\n        // refactoring\n        var calendarDayCount = 1;\n        let firstWeekOffset = start.getDay();\n        let weeks = [];\n        let week = [];\n        let selected = false;\n        for(var i = 1; calendarDayCount <= end.getDate(); i++)\n        {\n            if(i < firstWeekOffset+1)\n            {                \n                week.push(<td key={i}></td>);\n            }\n            else\n            {\n                var td = <td key={i}>{calendarDayCount}</td>;\n                if(calendarDayCount === selectedDate.getDate())\n                {                   \n                    selected = true; \n                    td = <td className=\"selected-date\" key={i}>{calendarDayCount}</td>;\n                }                \n                week.push(td);\n                calendarDayCount++;\n            }\n\n            if(i%7===0) // end of the week\n            {\n                var tr = <tr key=\"tr\">{week}</tr>;\n                if(selected)\n                {\n                    tr = <tr className=\"selected-week\" key={\"tr\"-i}>{week}</tr>;\n                    selected = false;\n                }\n                weeks.push(tr);\n                week = [];\n            }\n        }\n        for(let i = 0; i < 6-end.getDay(); i++) {\n            week.push(<td key={i}></td>);\n        }\n\n        weeks.push((\n            <tr key=\"tr\">{week}</tr>\n        ));\n        return weeks;\n    }\n\n    RenderCalendar(date) {\n        var firstDayOfMonth = new Date(date.getFullYear(), date.getMonth());\n        var lastDayOfMonth = new Date(date.getFullYear(), date.getMonth() + 1, 0);\n        console.log(firstDayOfMonth, lastDayOfMonth);\n        return (\n            <table>\n                <caption>{this.GetMonthNameFromInt(firstDayOfMonth.getMonth())} - {date.getFullYear()}</caption>\n                <thead>\n                    <tr>\n                        {this.RenderDaysOfTheWeekHeader()}                        \n                    </tr>\n                </thead>\n                <tbody>\n                    {this.RenderWeeksOfTheWeekHeader(firstDayOfMonth, lastDayOfMonth, date)}\n                </tbody>\n            </table>\n        ); \n    }\n\n    render() {\n        return (\n            <div className=\"calendar\">        \n                {this.RenderCalendar(this.props.date)}\n            </div>\n        );\n    }\n}","import React from 'react';\n\nexport default class extends React.Component {\n    render() {\n        return (\n            <div>\n                <h1>Reminders</h1>\n                <ul>\n                    <li>i am a reminder</li>\n                </ul>\n            </div>\n        );\n    }\n}","import React from 'react';\n\nexport default class DetailedView extends React.Component {\n    RenderHeader(selectedDates) {\n        var header = [];\n        // timestamp column\n        header.push((\n            <th></th> \n        ));\n        for (let start = selectedDates.start().getDate(); start <= selectedDates.end().getDate(); start++)\n        {\n            header.push((\n                <th>{start}</th>\n            ));\n        }\n        return header;\n    }\n    GetEventCols(selectedDates, time, intv) {\n        // we will have to make an api call here\n        var header = [];\n        // timestamp column\n        for (let start = selectedDates.start().getDate(); start <= selectedDates.end().getDate(); start++)\n        {\n            header.push((\n                <td></td>\n            ));\n        }\n        return header;\n    }\n    RenderBody(selectedDates, intervals) {\n        var tr = [];\n        var hoursDiv = 60/intervals;\n        for(let i = 0, time = 12, intv=0; i < 24*hoursDiv; i++) {\n            var ths = [];\n            ths.push((\n                <td key={i}>{time}:{intv < 9 ? \"0\"+intv : intv}</td>                \n            ));            \n            ths.push(this.GetEventCols(selectedDates, time, intv));\n            tr.push((\n                <tr key={i*2}>{ths}</tr>\n            ))\n            intv += intervals;\n            if(intv === 60) {\n                intv = 0;\n                if(time===12) time = 1;\n                else time++;\n            }\n        }\n        return tr;\n    }\n    RenderDetailedView (selectedDates, intv) {\n        console.log(selectedDates.start());\n        console.log(selectedDates.end());\n        return (\n            <React.Fragment>\n                <table>\n                    <thead>\n                        <tr key=\"abc123\">\n                            {this.RenderHeader(selectedDates)}\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.RenderBody(selectedDates, intv)}\n                    </tbody>\n                </table>\n            </React.Fragment>\n        );\n    }\n    render() {\n        return (\n            <React.Fragment>\n                {this.RenderDetailedView(this.props.selectedDates, this.props.intervals)}\n            </React.Fragment>\n        );\n    }\n}","import React from 'react'; \nimport Calendar from './components/Calendar'\nimport Reminders from './components/Reminders';\nimport DetailedView from './components/DetailedView'\nimport './css/style.css';\n\nexport default class App extends React.Component {\n\n    state = {\n        selectedDate: new Date(),        \n        intervals: 30,\n        reminders: {},\n        selectedDates: {\n            start: () => {\n                var date = this.state.selectedDate;\n                if(date.getDate() === 1) return date;\n                var offset = date.getDay()-this.state.userPreferences.startOfWeek;\n                return new Date(date.getFullYear(), date.getMonth(), date.getDate()-offset);\n            },\n            end: () => {\n                var date = this.state.selectedDate;\n                var offset = 6-date.getDay()+this.state.userPreferences.startOfWeek;\n                return new Date(date.getFullYear(), date.getMonth(), date.getDate()+offset);\n            }\n        },\n        userPreferences: {\n            startOfWeek: 0,\n        }\n    };\n\n    constructor () {\n        // load state for user\n        var x = new URLSearchParams();\n        console.log(x);\n        super();\n    };\n    \n    render () {\n        return (\n            <React.Fragment>\n                <aside className=\"sidebar\">\n                    <Calendar className=\"calendar\" date={this.state.selectedDate} selectedDates={this.state.selectedDates} />\n                    <Reminders className=\"reminders\" />\n                </aside>\n                <div className=\"details-view\" >\n                    <DetailedView date={this.state.selectedDate} intervals={this.state.intervals} selectedDates={this.state.selectedDates} />\n                </div>\n            </React.Fragment>\n        );\n    }\n}","import React from 'react';\nimport {render} from 'react-dom';\nimport ReactDOMServer from 'react-dom/server';\nimport App from './App'\n\nclass CalendarCustomHTMLElement extends HTMLElement {\n    constructor() {\n        super();\n        this.innerHTML = ReactDOMServer.renderToString(<App />);\n    }\n}\n\nwindow.customElements.define(\"app-calendar\", CalendarCustomHTMLElement);\nrender(<App />, document.querySelector(\"#calendar\"));"],"sourceRoot":""}